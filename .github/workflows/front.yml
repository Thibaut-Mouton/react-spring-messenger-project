name: front

on:
  push:
    branches: [develop]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: setup node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: install dependencies
        run: npm --prefix ./frontend-web install
      - name: test front
        id: test
        run: npm --prefix ./frontend-web run test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: install
        run: npm --prefix ./frontend-web install
      - name: build
        run: npm --prefix ./frontend-web run build

  login:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_HOST }}
          username: _json_key
          password: ${{ secrets.DOCKER_REGISTRY_SA }}

  push:
    needs: login
    runs-on: ubuntu-latest
    steps:
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: frontend-web
          push: true
          tags: ${{ secrets.SERVICE_NAME }}:latest

  deploy:
    needs: push
    runs-on: ubuntu-latest

    steps:
      #- name: Deploy dev
      #  if: branch.
      #  run: |
      #    gcloud deploy DEV
      - uses: actions/checkout@v4
      - name: Deploy artifact
        #if: branch
        run: |
          APP_VERSION=`cat ./frontend-web/package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]'`
          gcloud auth activate-service-account ${{ secrets.CLOUD_RUN_SA }} --key-file=${{ secrets.CLOUD_RUN_SA_KEY }}
          gcloud run deploy ${{ secrets.SERVICE_NAME }} --service-account=${{ secrets.CLOUD_RUN_SA }} --allow-unauthenticated --region=${{ secrets.REGION }} --project=${{ secrets.REGION }} --port=80 --image=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE_NAME }}/${{ secrets.SERVICE_NAME }}:$APP_VERSION
          gcloud beta run services add-iam-policy-binding --region=${{ secrets.REGION }} --member=allUsers --role=roles/run.invoker ${{ secrets.SERVICE_NAME }} --project=${{ secrets.PROJECT_ID}}
